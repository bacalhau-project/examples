# ===================================================================
# TEST DOCKER COMPOSE FILE - MULTI-REGION SETUP
# ===================================================================
# This file is automatically generated for TESTING ONLY.
# It creates {{ cities|length }} regions with {{ sensors_per_city }} sensors each
# and one dedicated uploader per region.
# ===================================================================

services:
{% for city in cities %}
  {# Get city information #}
  {%- set city_name = city.name %}
  {%- set city_clean = city.name|replace(' ', '_') %}
  {%- set latitude = city.latitude %}
  {%- set longitude = city.longitude %}
  
  {# Generate sensors for this city #}
  {%- for i in range(1, sensors_per_city + 1) %}
  {%- set sensor_code = random_codes[city_name ~ '_' ~ i] %}
  {%- set sensor_id = city_clean ~ sensor_code %}
  # Sensor {{ sensor_id }} in {{ city_name }}
  sensor_{{ city_clean }}_{{ sensor_code }}:
    image: ghcr.io/bacalhau-project/sensor-log-generator:2504171948
    container_name: sensor_{{ city_clean }}_{{ sensor_code }}
    environment:
      - READINGS_PER_SECOND={{ readings_per_second }}
      - ANOMALY_PROBABILITY={{ anomaly_probability }}
      - SENSOR_ID={{ sensor_id }}
      - SENSOR_LOCATION={{ city_name }}
      - SENSOR_LATITUDE={{ latitude }}
      - SENSOR_LONGITUDE={{ longitude }}
    volumes:
      - ./data/{{ city_clean }}/{{ sensor_code }}:/app/data
      - ./{{ sensor_config_file }}:/app/config/sensor-config.yaml
    restart: unless-stopped
    command: ["uv", "run", "-s", "main.py", "--config", "/app/config/sensor-config.yaml"]
    
  {%- endfor %}
  
  # Uploader for {{ city_name }}
  uploader_{{ city_clean }}:
    image: ghcr.io/bacalhau-project/cosmos-uploader:{{ uploader_image_tag }}
    container_name: uploader_{{ city_clean }}
    depends_on:
{% for i in range(1, sensors_per_city + 1) %}
{% set sensor_code = random_codes[city_name ~ '_' ~ i] %}
      - sensor_{{ city_clean }}_{{ sensor_code }}
{% endfor %}
    environment:
      - DOTNET_ENVIRONMENT={{ dotnet_environment|default('Production') }}
      - UPLOAD_INTERVAL={{ upload_interval }}
      - ARCHIVE_FORMAT={{ archive_format }}
      - COSMOS_ENDPOINT={{ cosmos_endpoint|default('') }}
      - COSMOS_KEY={{ cosmos_key|default('') }}
      - COSMOS_DATABASE={{ cosmos_database|default('SensorData') }}
      - COSMOS_CONTAINER={{ cosmos_container|default('SensorReadings') }}
      - REGION={{ city_name }}
    volumes:
      - ./config:/app/config
      - ./data/{{ city_clean }}:/app/data
      - ./archive/{{ city_clean }}:/app/archive
    command: ["--config", "/app/config/{{ config_file }}", "--sqlite", "/app/data", "--continuous", "--interval", "{{ upload_interval }}", "--archive-path", "/app/archive"]
    restart: unless-stopped
    
{% endfor %}

volumes:
  sensor_data:
    driver: local
  archive_data:
    driver: local