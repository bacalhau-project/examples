name: bacalhau-network

x-common-env-variables: &common-env-variables
  BACALHAU_DISABLEANALYTICS: true
  LOG_LEVEL: info

# Common logging configuration to disable logs
x-logging-driver: &logging-driver
  logging:
    driver: "none"

services:
  orchestrator:
    image: ghcr.io/bacalhau-project/bacalhau:latest
    hostname: orchestrator
    command: serve -c /etc/bacalhau/config.yaml --name orchestrator
    environment: *common-env-variables
    # Using host network mode for best performance
    network_mode: "host"
    volumes:
      - ./network-config/orchestrator.yaml:/etc/bacalhau/config.yaml
#    ports:
#      - "1234:1234"
#    networks:
#      - bacalhau-network
    deploy:
      resources:
        reservations:
          cpus: "2.0"
          memory: "4G"
    healthcheck:
      test: [ "CMD", "bacalhau", "agent", "alive" ]
      interval: 30s
      timeout: 20s
      retries: 10
      start_period: 15s
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    # Orchestrator keeps logging enabled

  nodes:
    image: ghcr.io/bacalhau-project/bacalhau:latest-dind
    privileged: true
    command: serve -c /etc/bacalhau/config.yaml
    volumes:
      - ./network-config/compute.yaml:/etc/bacalhau/config.yaml
      - ./docker-config/daemon.json:/etc/docker/daemon.json
    environment:
      <<: *common-env-variables
    depends_on:
      orchestrator:
        condition: service_healthy
    networks:
      - bacalhau-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    dns:
      - 1.1.1.1
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
#    <<: *logging-driver

  client:
    image: ghcr.io/bacalhau-project/bacalhau:latest
    entrypoint: /bin/sh
    stdin_open: true
    tty: true
    stop_signal: SIGTERM
    stop_grace_period: 3s
    environment:
      <<: *common-env-variables
      # Point to orchestrator on host network
      BACALHAU_API_HOST: "host.docker.internal"
    depends_on:
      - orchestrator
    networks:
      - bacalhau-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    <<: *logging-driver

  registry-proxy:
    image: registry:2
    ports:
      - "5000:5000"
    volumes:
      - registry-data:/var/lib/registry
    networks:
      - bacalhau-network

  minio:
    image: quay.io/minio/minio:RELEASE.2024-05-27T15-15-20Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER:  minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Web console
    volumes:
      - minio-data:/data
    networks:
      - bacalhau-network

  spark-master:
    image: bitnami/spark:3.5
    depends_on: [minio]
    environment:
      - SPARK_MODE=master
      - SPARK_DAEMON_MEMORY=1G
      - SPARK_EXTRA_CLASSPATH=/opt/delta/jars/*
    volumes:
      - spark-delta-jars:/opt/delta/jars
      - ./local-lakehouse/spark/conf:/opt/bitnami/spark/conf
    networks:
      - bacalhau-network

  spark-worker:
    image: bitnami/spark:3.5
    depends_on: [spark-master]
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_EXTRA_CLASSPATH=/opt/delta/jars/*
    volumes:
      - spark-delta-jars:/opt/delta/jars
    networks:
      - bacalhau-network

  notebook:
    image: jupyter/pyspark-notebook:spark-3.5.0
    depends_on: [spark-master, minio]
    ports:
      - "8888:8888"
    environment:
      JUPYTER_ENABLE_LAB: "yes"
      AWS_ACCESS_KEY_ID:     minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      AWS_REGION:            us-east-1
      DELTA_SPARK_MASTER:    spark://spark-master:7077
      DELTA_STORAGE_URI:     s3a://bacalhau-local
    volumes:
      - ./local-lakehouse/notebooks:/home/jovyan/work
      - spark-delta-jars:/opt/delta/jars
    networks:
      - bacalhau-network

networks:
  bacalhau-network:
    ipam:
      config:
        - subnet: 172.28.0.0/16
    driver_opts:
      com.docker.network.driver.mtu: 1450

volumes:
  registry-data:
  minio-data: {}
  spark-delta-jars: {}
