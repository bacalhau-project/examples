#cloud-config

users:
  - name: ${username}
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    ssh_authorized_keys:
      - ${ssh_key}

package_update: true
package_upgrade: true

packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg
  - lsb-release
  - jq

runcmd:
  # Install docker and docker-compose - from their repos
  - sudo apt-get update
  - sudo apt-get install -y \
    ca-certificates \
    curl \
    gnupg \
    lsb-release
  - sudo mkdir -p /etc/apt/keyrings
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
    | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  - echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
    https://download.docker.com/linux/ubuntu \
    $(lsb_release -cs) stable" \
    | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  - sudo apt-get update
  - sudo apt-get install -y \
    docker-ce \
    docker-ce-cli \
    containerd.io \
    docker-compose-plugin

  # Create necessary directories first
  - mkdir -p ${bacalhau_data_dir}
  - mkdir -p ${bacalhau_node_dir}
  - mkdir -p /etc/bacalhau
  - mkdir -p /etc/systemd/system
  - mkdir -p /usr/local/bin

  # Write files after directories are created
  - echo "${bacalhau_startup_service_file}" | base64 -d > /etc/systemd/system/bacalhau-startup.service
  - echo "${bacalhau_startup_script_file}" | base64 -d > /usr/local/bin/startup.sh
  - echo "${bacalhau_config_file}" | base64 -d > ${bacalhau_node_dir}/config.yaml
  - echo "${docker_compose_file}" | base64 -d > ${bacalhau_node_dir}/docker-compose.yaml

  # Set correct permissions
  - chmod 0600 /etc/systemd/system/bacalhau-startup.service
  - chmod 0700 /usr/local/bin/startup.sh
  - chmod 0400 ${bacalhau_node_dir}/config.yaml
  - chmod 0400 ${bacalhau_node_dir}/docker-compose.yaml

  # Set ownership
  - chown -R ${username}:${username} ${bacalhau_data_dir}
  - chown -R ${username}:${username} ${bacalhau_node_dir}
  - chown ${username}:${username} ${bacalhau_node_dir}/config.yaml
  - chown ${username}:${username} ${bacalhau_node_dir}/docker-compose.yaml

  # Add user to docker group
  - usermod -aG docker ${username}

  # Install uv globally and set permissions
  - export HOME=/root
  - curl -LsSf https://astral.sh/uv/install.sh | env UV_INSTALL_DIR="/usr/local/bin" HOME=/root sh
  - chmod 755 /usr/local/bin/uv || true
  - chown ${username}:${username} /usr/local/bin/uv || true

  # Create uv cache directory for user
  - mkdir -p /home/${username}/.cache/uv
  - chown -R ${username}:${username} /home/${username}/.cache

  # Install health check web server
  - echo "${healthz_web_server_script_file}" | base64 -d > /usr/local/bin/healthz-web-server.py
  - chmod 755 /usr/local/bin/healthz-web-server.py
  - chown ${username}:${username} /usr/local/bin/healthz-web-server.py

  # Create a symlink without .py extension for Gunicorn
  - ln -sf /usr/local/bin/healthz-web-server.py /usr/local/bin/healthz-web-server

  # Install service
  - echo "${healthz_service_file}" | base64 -d > /etc/systemd/system/healthz-web.service
  - chmod 644 /etc/systemd/system/healthz-web.service

  # Configure Docker to start on boot
  - systemctl enable docker.service
  - systemctl enable containerd.service

  # Start services
  - systemctl daemon-reload
  - systemctl enable docker
  - systemctl start docker
  - systemctl enable healthz-web.service
  - systemctl start healthz-web.service
  - systemctl enable bacalhau-startup.service
  - systemctl start bacalhau-startup.service

power_state:
  mode: reboot
  timeout: 1800
  condition: True
