#cloud-config

users:
  - name: ${username}
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    ssh_authorized_keys:
      - ${public_ssh_key}
    groups: docker

package_update: true
package_upgrade: true

runcmd:
  - |
    # Remove minimal packages only if DNF is available (i.e., on Amazon Linux 2023).
    all_packages="curl gnupg2 jq python3 python3-pip"
    if command -v dnf >/dev/null 2>&1; then
      dnf install --allowerasing -y $all_packages
    elif command -v apt >/dev/null 2>&1; then
      apt update
      apt install -y $all_packages
    elif command -v yum >/dev/null 2>&1; then
      yum install -y $all_packages
    else
      echo "Unsupported package manager"
      exit 1
    fi

  # Install Docker
  - echo "${docker_install_script_file}" | base64 -d > /root/install-docker.sh
  - chmod 755 /root/install-docker.sh
  - /root/install-docker.sh

  # Ensure the authorized key is added to the user
  - mkdir -p /home/${username}/.ssh
  - echo "${public_ssh_key}" | base64 -d >> /home/${username}/.ssh/authorized_keys
  - chown -R ${username}:${username} /home/${username}/.ssh
  - chmod 0600 /home/${username}/.ssh/authorized_keys

  # Create necessary directories first
  - mkdir -p ${bacalhau_data_dir}
  - mkdir -p ${bacalhau_node_dir}
  - mkdir -p /etc/bacalhau
  - mkdir -p /etc/systemd/system
  - mkdir -p /usr/local/bin

  # Write files after directories are created
  - echo "${bacalhau_startup_service_file}" | base64 -d > /etc/systemd/system/bacalhau-startup.service
  - echo "${bacalhau_startup_script_file}" | base64 -d > /usr/local/bin/startup.sh
  - echo "${bacalhau_config_file}" | base64 -d > ${bacalhau_node_dir}/config.yaml
  - echo "${docker_compose_file}" | base64 -d > ${bacalhau_node_dir}/docker-compose.yaml

  # Set correct permissions
  - chmod 0600 /etc/systemd/system/bacalhau-startup.service
  - chmod 0700 /usr/local/bin/startup.sh
  - chmod 0400 ${bacalhau_node_dir}/config.yaml
  - chmod 0400 ${bacalhau_node_dir}/docker-compose.yaml
  - chmod 0777 ${bacalhau_data_dir}

  # Set ownership
  - chown -R ${username}:${username} ${bacalhau_data_dir}
  - chown -R ${username}:${username} ${bacalhau_node_dir}
  - chown ${username}:${username} ${bacalhau_node_dir}/config.yaml
  - chown ${username}:${username} ${bacalhau_node_dir}/docker-compose.yaml

  # Add user to docker group
  - usermod -aG docker ${username}

  # Install uv globally and set permissions
  - export HOME=/root
  - curl -LsSf https://astral.sh/uv/install.sh | env UV_INSTALL_DIR="/usr/local/bin" HOME=/root sh
  - chmod 755 /usr/local/bin/uv || true
  - chown ${username}:${username} /usr/local/bin/uv || true

  # Create uv cache directory for user
  - mkdir -p /home/${username}/.cache/uv
  - chown -R ${username}:${username} /home/${username}/.cache

  # Install health check web server
  - echo "${healthz_web_server_script_file}" | base64 -d > /usr/local/bin/healthz-web-server.py
  - chmod 755 /usr/local/bin/healthz-web-server.py
  - chown ${username}:${username} /usr/local/bin/healthz-web-server.py

  # Create a symlink without .py extension for Gunicorn
  - ln -sf /usr/local/bin/healthz-web-server.py /usr/local/bin/healthz-web-server

  # Install service
  - echo "${healthz_service_file}" | base64 -d > /etc/systemd/system/healthz-web.service
  - chmod 644 /etc/systemd/system/healthz-web.service

  # Configure Docker to start on boot
  - systemctl enable docker.service
  - systemctl enable containerd.service

  # Start services
  - systemctl daemon-reload
  - systemctl enable docker
  - systemctl start docker
  - systemctl enable healthz-web.service
  - systemctl start healthz-web.service
  - systemctl enable bacalhau-startup.service
  - systemctl start bacalhau-startup.service

  # Run additional commands - touch here just to ensure the file exists
  - touch /tmp/exs/additional_commands.sh
  - chmod 0700 /tmp/exs/additional_commands.sh
  - /tmp/exs/additional_commands.sh

power_state:
  mode: reboot
  timeout: 1800
  condition: True
