version: "3.8"

services:
  sensor-simulator:
    image: sensor-simulator:latest
    container_name: sensor-debug
    environment:
      # Required environment variables
      - CONFIG_FILE=/app/config.yaml
      - IDENTITY_FILE=/app/identity.json

      # SQLite optimization for containers
      - SQLITE_TMPDIR=/app/data/tmp

      # Enable debug logging (override config if needed)
      - LOG_LEVEL=DEBUG

    volumes:
      # Mount configuration files
      - ./config.yaml:/app/config.yaml:ro
      - ./identity.json:/app/identity.json:ro

      # Data volume with proper permissions
      - sensor_data:/app/data

      # Alternative: bind mount with specific permissions
      # - ./data:/app/data:rw

    # Resource limits to prevent issues
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.5"
          memory: 256M

    # Increase ulimits for file handles
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

    # Health check
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "-q",
          "--tries=1",
          "--spider",
          "http://localhost:8080/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # Restart policy
    restart: unless-stopped

    # Network configuration
    networks:
      - sensor_network

    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Database viewer for debugging
  sqlite-web:
    image: coleifer/sqlite-web:latest
    container_name: sqlite-viewer
    environment:
      - SQLITE_DATABASE=/data/sensor_data.db
    volumes:
      - sensor_data:/data:ro
    ports:
      - "8081:8080"
    networks:
      - sensor_network
    profiles:
      - debug

volumes:
  sensor_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data

networks:
  sensor_network:
    driver: bridge
# Usage:
# 1. Create data directory with proper permissions:
#    mkdir -p data/tmp && chmod -R 777 data/
#
# 2. Start with debug profile to include SQLite viewer:
#    docker-compose -f docker-compose.debug.yml --profile debug up
#
# 3. View logs:
#    docker-compose -f docker-compose.debug.yml logs -f sensor-simulator
#
# 4. Access SQLite viewer at http://localhost:8081
