x-common-env-variables: &common-env-variables
  MINIO_ROOT_USER: "minioadmin"
  MINIO_ROOT_PASSWORD: "minioadmin"
  AWS_ACCESS_KEY_ID: "minioadmin"
  AWS_SECRET_ACCESS_KEY: "minioadmin"
  BACALHAU_DISABLEANALYTICS: true
  FERRETDB_URI: "mongodb://username:password@172.30.0.100:27017/postgres"
  GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY:-set-your-own-google-maps-api-key}

x-sensor-template: &sensor-template
  image: ghcr.io/bacalhau-project/bacalhau:v1.7.0-dind
  entrypoint: "/usr/local/bin/entrypoint.sh sh -c"
  command: >
    "env >> /etc/environment &&
    mkdir -p /mnt/data &&
    bacalhau serve -c /etc/bacalhau/config.yaml"
  depends_on:
    orchestrator:
      condition: service_healthy
    storage:
      condition: service_healthy
    ferretdb:
      condition: service_started
  privileged: true
  restart: on-failure
  volumes:
    - ./bacalhau-config/compute.yaml:/etc/bacalhau/config.yaml
  networks:
    - ferret-demo-net

services:
  orchestrator:
    image: ghcr.io/bacalhau-project/bacalhau:v1.7.0
    container_name: ferret-demo-orchestrator
    command: serve -c /etc/bacalhau/config.yaml --name orchestrator
    environment: *common-env-variables
    ports:
      - "8438:8438"
    volumes:
      - ./bacalhau-config/orchestrator.yaml:/etc/bacalhau/config.yaml
    healthcheck:
      test: ["CMD", "bacalhau", "agent", "alive"]
      interval: 5s
      timeout: 5s
      retries: 12
      start_period: 10s
    networks:
      - ferret-demo-net

  postgres:
    image: ghcr.io/bacalhau-project/examples/ferretdb-demo-documentdb:2504162218
    container_name: ferret-demo-postgres
    #     WARNING: This image is built only for x86_64 ####
    platform: linux/amd64
    restart: on-failure
    environment:
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    networks:
      - ferret-demo-net

  ferretdb:
    image: ghcr.io/bacalhau-project/examples/ferretdb-demo-ferretdb:2504162218
    container_name: ferret-demo-ferretdb
    restart: on-failure
    ports:
      - 27217:27017
    environment:
      - FERRETDB_POSTGRESQL_URL=postgres://username:password@postgres:5432/postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/debug/livez"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      ferret-demo-net:
        ipv4_address: 172.28.0.100

  storage:
    image: ghcr.io/bacalhau-project/examples/ferretdb-demo-minio:2504162218
    container_name: ferret-demo-storage
    entrypoint: sh
    command: -c 'mkdir -p /data/my-bucket && minio server /data --console-address ":9005"'
    environment: *common-env-variables
    ports:
      - "9005:9005"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - ferret-demo-net

  sensors:
    <<: *sensor-template

  frontend:
    image: ghcr.io/bacalhau-project/examples/sensor-monitoring-dashboard:2504291030
    container_name: ferret-demo-frontend
    environment:
      <<: *common-env-variables
    ports:
      - "3010:3000"
    depends_on:
      ferretdb:
        condition: service_started
    networks:
      - ferret-demo-net

  client:
    image: ghcr.io/bacalhau-project/bacalhau:v1.7.0
    container_name: ferret-demo-client
    entrypoint: /bin/sh
    stdin_open: true
    tty: true
    stop_signal: SIGTERM
    stop_grace_period: 3s
    environment:
      <<: *common-env-variables
      BACALHAU_API_HOST: orchestrator
    volumes:
      - ./scripts:/scripts
      - ./jobs:/jobs
      - ./1_run_generate_sensor_logs_job.sh:/1_run_generate_sensor_logs_job.sh
      - ./2_run_sync_sensor_logs_job.sh:/2_run_sync_sensor_logs_job.sh
      - ./3_replace_sync_sensor_logs_script.sh:/3_replace_sync_sensor_logs_script.sh
      - ./4_run_cleanup_whole_mongodb_job.sh:/4_run_cleanup_whole_mongodb_job.sh
    depends_on:
      - orchestrator
    networks:
      - ferret-demo-net

networks:
  ferret-demo-net:
    driver: bridge
