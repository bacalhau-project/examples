#cloud-config
packages:
  - python3
  - python3-pip
  - unzip
  - golang-go
  - git

write_files:
  - encoding: b64
    content: |
      ${ start_bacalhau }
    owner: root:root
    path: /node/start-bacalhau.sh
    permissions: "0700"
  - encoding: b64
    content: |
      ${ bacalhau_service }
    owner: root:root
    path: /etc/systemd/system/bacalhau.service
    permissions: "0600"
  - encoding: b64
    content: |
      ${ poller_service }
    owner: root:root
    path: /etc/systemd/system/poller.service
    permissions: "0600"
  - encoding: b64
    content: |
      ${ stress_service }
    owner: root:root
    path: /etc/systemd/system/stress.service
    permissions: "0600"
  - content: |
      export PROJECT_ID=${ project_id }
      export REGION=${ region }
      export ZONE=${ zone }
      export APPNAME=${ app_name }
    owner: root:root
    permissions: "0444"
    path: /etc/bacalhau-node-info
  - encoding: b64
    content: |
      ${ ipfs_service }
    owner: root:root
    permissions: "0600"
    path: /etc/systemd/system/ipfs.service

package_update: true

runcmd:
  - echo "Copying the SSH Key to the server"
  - |
    echo -n "${ ssh_key }" | awk 1 ORS=' ' >> /home/{ubuntu}/.ssh/authorized_keys
  #
  # Make node directory for all scripts
  #
  - mkdir -p /node
  - chmod 0700 /node
  - mkdir -p /data
  - chmod 0700 /data
  - mkdir -p /var/logs
  - mkdir -p /db
  - chmod 0700 /db
  #
  # Install docker
  #
  - sudo apt-get install -y ca-certificates curl gnupg lsb-release
  - sudo mkdir -p /etc/apt/keyrings
  - |
    curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  - sudo apt-get update -y
  - sudo apt -y install docker-ce docker-ce-cli containerd.io docker-compose-plugin
  #
  # Get MongoDB Container
  #
  - docker pull mongo:latest
  - docker run --name local-mongo --network=host --restart=always -d -v mongo_data:/data/db mongo:latest
  #
  # Install poller scripts
  #
  - wget https://storage.googleapis.com/${scripts_bucket_source}/${scripts_object_key}
  - unzip ./${scripts_object_key} -d ./scripts
  - cd ./scripts
  - pip3 install --no-cache-dir -r requirements.txt
  - cd ../

  # Install Stress Program
  - git clone https://github.com/dhoomakethu/stress.git
  - cd stress/
  - sudo go build stress.go
  - cd ../
  - sudo mv stress /etc/

  #
  # Install IPFS
  #
  - wget https://dist.ipfs.io/go-ipfs/v0.9.1/go-ipfs_v0.9.1_linux-amd64.tar.gz
  - tar xvf go-ipfs_v0.9.1_linux-amd64.tar.gz
  - sudo bash go-ipfs/install.sh
  - IPFS_PATH=/data ipfs init
  #
  # Install Bacalhau
  #
  - |
    curl -sL https://get.bacalhau.org/install.sh | bash
  - echo "Bacalhau downloaded."
  - |
    curl https://bacalhau-named-builds.s3.ca-central-1.amazonaws.com/clean_words_alpha.txt --output /node/clean_words_alpha.txt
  # Reload the systemd daemon, enable, and start the service
  - sudo sysctl -w net.core.rmem_max=2500000
  - sudo systemctl daemon-reload
  - sudo systemctl enable ipfs
  - sudo systemctl restart ipfs
  - sudo systemctl enable docker
  - sudo systemctl restart docker
  - sudo systemctl enable bacalhau.service
  - sudo systemctl restart bacalhau.service
  - sudo systemctl enable poller.service
  - sudo systemctl start poller.service
  - sudo systemctl enable stress.service
  - sudo systemctl start stress.service
  - sleep 20 # Give the log generator a chance to start - and then force generate four entries
  - echo "Finished startup."
