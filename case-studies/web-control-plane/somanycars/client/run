#!/usr/bin/env bash
set -x
set -e

# FROM HERE - https://github.com/nickjj/docker-flask-example/blob/main/run

set -o errexit
set -o pipefail

DC="${DC:-exec}"

# If we're running in CI we need to disable TTY allocation for docker compose
# commands that enable it by default, such as exec and run.
TTY=""
if [[ ! -t 1 ]]; then
  TTY="-T"
fi

# -----------------------------------------------------------------------------
# Helper functions start with _ and aren't listed in this script's help menu.
# -----------------------------------------------------------------------------

function _dc {
  docker compose "${DC}" ${TTY} "${@}"
}

function _build_run_down {
  docker compose build
  docker compose run ${TTY} "${@}"
  docker compose down
}

# -----------------------------------------------------------------------------

function lint:dockerfile {
  # Lint Dockerfile
  docker container run --rm -i \
    hadolint/hadolint hadolint --ignore DL3008 -t style "${@}" - < Dockerfile
}

function check {
  ruff check .
}

function format {
  # Format Python imports
  ruff format .
}

function quality {
  check
  format
}

# function test {
#   # Run test suite
#   cmd pytest test/ "${@}"
# }

# function shell {
#   # Start a shell session in the web container
#   cmd bash "${@}"
# }

function build {
  # Update and export requirements.txt from poetry.lock
  poetry export --without-hashes --format=requirements.txt > requirements.txt

  # Build the Docker image
  docker build --platform=linux/amd64 -t somanycars-client .
}

function help {
  printf "%s <task> [args]\n\nTasks:\n" "${0}"

  compgen -A function | grep -v "^_" | cat -n

  printf "\nExtended help:\n  Each task has comments for general usage\n"
}

# This idea is heavily inspired by: https://github.com/adriancooney/Taskfile
TIMEFORMAT=$'\nTask completed in %3lR'
time "${@:-help}"