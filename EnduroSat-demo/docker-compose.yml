x-common-env-variables: &common-env-variables
  MINIO_ROOT_USER: "minioadmin"
  MINIO_ROOT_PASSWORD: "minioadmin"
  AWS_ACCESS_KEY_ID: "minioadmin"
  AWS_SECRET_ACCESS_KEY: "minioadmin"
  BACALHAU_DISABLEANALYTICS: true
  LABELS: "role=sensor,region=Sat"
  BANDWIDTH: "LOW"






x-sensor-template: &sensor-template
    image: ghcr.io/bacalhau-project/bacalhau:v1.7.0-dind
    entrypoint: "/scripts/start.sh"
    environment: *common-env-variables
    depends_on:
      orchestrator:
        condition: service_healthy
      storage:
        condition: service_healthy
      createbuckets:
        condition: service_completed_successfully
    privileged: true
    restart: on-failure
    networks:
      - sat-demo-net


services:



  storage:
    image: quay.io/minio/minio
    container_name: sat-demo-storage
    entrypoint: sh
    command: -c 'mkdir -p /data/my-bucket && minio server /data --console-address ":9001"'
    environment: *common-env-variables
    ports:
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - sat-demo-net
    volumes:
      - ./minio-data:/data

  createbuckets:
    image: quay.io/minio/mc:RELEASE.2025-03-12T17-29-24Z
    depends_on:
      storage:
        condition: service_healthy
    restart: on-failure
    environment: *common-env-variables
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set localminio http://storage:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD};
      mc mb localminio/low-bandwitch || true;
      mc mb localminio/high-bandwitch || true;
      exit 0;
      "
    networks:
      - sat-demo-net



  orchestrator:
    image: ghcr.io/bacalhau-project/bacalhau:v1.7.0
    container_name: sat-demo-orchestrator
    command: serve -c /etc/bacalhau/config.yaml --name orchestrator
    environment: *common-env-variables
    ports:
      - "8438:8438"
      - "4222:4222"
      - "1234:1234"
    volumes:
      - ./bacalhau-config/orchestrator.yaml:/etc/bacalhau/config.yaml
    healthcheck:
      test: ["CMD", "bacalhau", "agent", "alive"]
      interval: 5s
      timeout: 5s
      retries: 12
      start_period: 10s
    networks:
      - sat-demo-net


  node1:
    hostname: node1
    container_name: sat-demo-compute-node-1
    environment:
      <<: *common-env-variables
    volumes:
      - ./docker-config/daemon.json:/etc/docker/daemon.json
      - ./node1-data:/mnt/local_files
      - ./bacalhau-config/compute.yaml:/etc/bacalhau/config.yaml
      - ./scripts:/scripts
      - ./jobs:/jobs
      - ./app:/app
    <<: *sensor-template
  node2:
    hostname: node2
    container_name: sat-demo-compute-node-2
    environment:
      <<: *common-env-variables
    volumes:
      - ./docker-config/daemon.json:/etc/docker/daemon.json
      - ./node2-data:/mnt/local_files
      - ./bacalhau-config/compute.yaml:/etc/bacalhau/config.yaml
      - ./scripts:/scripts
      - ./jobs:/jobs
      - ./app:/app
    <<: *sensor-template

  node3:
    hostname: node3
    container_name: sat-demo-compute-node-3
    environment:
      <<: *common-env-variables
    volumes:
      - ./docker-config/daemon.json:/etc/docker/daemon.json
      - ./node3-data:/mnt/local_files
      - ./bacalhau-config/compute.yaml:/etc/bacalhau/config.yaml
      - ./scripts:/scripts
      - ./jobs:/jobs
      - ./app:/app
    <<: *sensor-template
  node4:
    hostname: node4
    container_name: sat-demo-compute-node-4
    environment:
      <<: *common-env-variables
    volumes:
      - ./docker-config/daemon.json:/etc/docker/daemon.json
      - ./node4-data:/mnt/local_files
      - ./bacalhau-config/compute.yaml:/etc/bacalhau/config.yaml
      - ./scripts:/scripts
      - ./jobs:/jobs
      - ./app:/app
    <<: *sensor-template

  node5:
    hostname: node5
    container_name: sat-demo-compute-node-5
    environment:
      <<: *common-env-variables
    volumes:
      - ./docker-config/daemon.json:/etc/docker/daemon.json
      - ./node5-data:/mnt/local_files
      - ./bacalhau-config/compute.yaml:/etc/bacalhau/config.yaml
      - ./scripts:/scripts
      - ./jobs:/jobs
      - ./app:/app
    <<: *sensor-template

  client:
    image: ghcr.io/bacalhau-project/bacalhau:v1.7.0
    container_name: sat-demo-client
    entrypoint: /bin/sh
    stdin_open: true
    tty: true
    stop_signal: SIGTERM
    stop_grace_period: 3s
    environment:
      <<: *common-env-variables
      BACALHAU_API_HOST: orchestrator
    volumes:
      - ./jobs:/jobs
    depends_on:
      - orchestrator
    networks:
      - sat-demo-net

  registry-proxy:
    image: registry:2
    ports:
      - "5000:5000"
    volumes:
      - ./registry-data:/var/lib/registry
    networks:
      - sat-demo-net


networks:
  sat-demo-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
