apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: bacalhau-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.0
  name: bacalhaujobs.core.bacalhau.org
spec:
  group: core.bacalhau.org
  names:
    kind: BacalhauJob
    listKind: BacalhauJobList
    plural: bacalhaujobs
    singular: bacalhaujob
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: ID of the BacalhauJob
      jsonPath: .status.jobID
      name: JobID
      type: string
    - description: Last time the status was checked
      jsonPath: .status.lastPolled
      name: LastPolled
      type: string
    - description: Latest status of the BacalhauJob
      jsonPath: .status.jobState
      name: JobState
      type: string
    - description: Is BacalhauJob in its terminated state
      jsonPath: .status.terminated
      name: Terminated
      type: boolean
    name: v1
    schema:
      openAPIV3Schema:
        description: BacalhauJob is the Schema for the jobs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          executions:
            items:
              properties:
                id:
                  type: string
                logs:
                  items:
                    type: string
                  type: array
                stderror:
                  type: string
                stdoutput:
                  type: string
              type: object
            type: array
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              constraints:
                items:
                  properties:
                    key:
                      type: string
                    operator:
                      type: string
                    values:
                      items:
                        type: string
                      type: array
                  required:
                  - key
                  - operator
                  type: object
                type: array
              count:
                type: integer
              entrypoint:
                items:
                  type: string
                type: array
              image:
                type: string
              type:
                type: string
            type: object
          status:
            description: BacalhauJobStatus defines the observed state of BacalhauJob
            properties:
              executions:
                items:
                  properties:
                    id:
                      type: string
                    logs:
                      items:
                        type: string
                      type: array
                    stderror:
                      type: string
                    stdoutput:
                      type: string
                  type: object
                type: array
              jobID:
                type: string
              jobState:
                type: string
              lastPolled:
                type: string
              terminated:
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bacalhau-controller-manager
  namespace: bacalhau-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: bacalhau-leader-election-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: bacalhau-manager-role
rules:
- apiGroups:
  - core.bacalhau.org
  resources:
  - bacalhaujobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - core.bacalhau.org
  resources:
  - bacalhaujobs/finalizers
  verbs:
  - update
- apiGroups:
  - core.bacalhau.org
  resources:
  - bacalhaujobs/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: bacalhau-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: bacalhau-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: bacalhau-leader-election-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: bacalhau-leader-election-role
subjects:
- kind: ServiceAccount
  name: bacalhau-controller-manager
  namespace: bacalhau-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: bacalhau-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: bacalhau-manager-role
subjects:
- kind: ServiceAccount
  name: bacalhau-controller-manager
  namespace: bacalhau-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: bacalhau-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: bacalhau-proxy-role
subjects:
- kind: ServiceAccount
  name: bacalhau-controller-manager
  namespace: bacalhau-system
---
apiVersion: v1
data:
  APIHost: bootstrap.production.bacalhau.org
  APIPort: "1234"
kind: ConfigMap
metadata:
  name: bacalhau-api-config
  namespace: bacalhau-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: b8811432.bacalhau.org
kind: ConfigMap
metadata:
  name: bacalhau-manager-config
  namespace: bacalhau-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: bacalhau-controller-manager-metrics-service
  namespace: bacalhau-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: bacalhau-controller-manager
  namespace: bacalhau-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        envFrom:
        - configMapRef:
            name: bacalhau-api-config
        image: kdrezewski/bacalhau-job-controller:0.1.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: job-controller
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
      securityContext:
        runAsNonRoot: true
      serviceAccountName: bacalhau-controller-manager
      terminationGracePeriodSeconds: 10
