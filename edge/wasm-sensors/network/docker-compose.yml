name: bacalhau-edge

x-common-env-variables: &common-env-variables
  BACALHAU_DISABLEANALYTICS: true
  LOG_LEVEL: debug

services:
  orchestrator:
    image: ghcr.io/bacalhau-project/bacalhau:latest
    hostname: orchestrator
    command: serve -c /etc/bacalhau/config.yaml --name orchestrator
    environment: *common-env-variables
    ports:
      - "8438:8438"
      - "1234:1234"
      - "4222:4222"
    networks:
      - bacalhau-network
    volumes:
      - ./config/orchestrator.yaml:/etc/bacalhau/config.yaml
    deploy:
      resources:
        limits:
          cpus: "4.0"
          memory: "8G"
        reservations:
          cpus: "2.0"
          memory: "4G"
    healthcheck:
      test: ["CMD", "bacalhau", "agent", "alive"]
      interval: 30s
      timeout: 20s
      retries: 10
      start_period: 15s

  web-services:
    image: ghcr.io/bacalhau-project/bacalhau:latest-dind
    hostname: web-services
    command: serve -c /etc/bacalhau/config.yaml -c labels=type=web-services
    volumes:
      - ./config/compute.yaml:/etc/bacalhau/config.yaml
    environment:
      <<: *common-env-variables
      AWS_ACCESS_KEY_ID: "$AWS_ACCESS_KEY_ID"
      AWS_SECRET_ACCESS_KEY: "$AWS_SECRET_ACCESS_KEY"
    depends_on:
      orchestrator:
        condition: service_healthy
    privileged: true
    networks:
      - bacalhau-network

  edge-us:
    image: ghcr.io/bacalhau-project/bacalhau:latest
    entrypoint: sh
    command: -c 'mkdir -p /app && bacalhau serve -c /etc/bacalhau/config.yaml -c labels=region=us,type=edge'
    volumes:
      - ./config/compute.yaml:/etc/bacalhau/config.yaml
      - ./modules:/app/modules
    environment:
      <<: *common-env-variables
      REGION: "us"
    depends_on:
      orchestrator:
        condition: service_healthy
    deploy:
      replicas: ${REPLICAS:-3}
      resources:
        limits:
          cpus: "0.03" # 3% of a CPU core
          memory: "200M" # 200MB per service
    networks:
      - bacalhau-network

  edge-eu:
    image: ghcr.io/bacalhau-project/bacalhau:latest
    entrypoint: sh
    command: -c 'mkdir -p /app && bacalhau serve -c /etc/bacalhau/config.yaml -c labels=region=eu,type=edge'
    volumes:
      - ./config/compute.yaml:/etc/bacalhau/config.yaml
      - ./modules:/app/modules
    environment:
      <<: *common-env-variables
      REGION: "eu"
    depends_on:
      orchestrator:
        condition: service_healthy
    deploy:
      replicas: ${REPLICAS:-3}
      resources:
        limits:
          cpus: "0.1" # 10% of a CPU core (enough for 20 jobs at 0.001 each)
          memory: "400M" # 400MB (enough for 10 jobs at 36MB each, plus overhead)
    networks:
      - bacalhau-network

  edge-as:
    image: ghcr.io/bacalhau-project/bacalhau:latest
    entrypoint: sh
    command: -c 'mkdir -p /app && bacalhau serve -c /etc/bacalhau/config.yaml -c labels=region=as,type=edge'
    volumes:
      - ./config/compute.yaml:/etc/bacalhau/config.yaml
      - ./modules:/app/modules
    environment:
      <<: *common-env-variables
      REGION: "as"
    depends_on:
      orchestrator:
        condition: service_healthy
    deploy:
      replicas: ${REPLICAS:-3}
      resources:
        limits:
          cpus: "0.1" # 10% of a CPU core (enough for 20 jobs at 0.001 each)
          memory: "400M" # 400MB (enough for 10 jobs at 36MB each, plus overhead)
    networks:
      - bacalhau-network

  sqs-proxy:
    image: ghcr.io/bacalhau-project/wasm-sensors-sqs-proxy:latest
    environment:
      <<: *common-env-variables
      AWS_ACCESS_KEY_ID: "$AWS_ACCESS_KEY_ID"
      AWS_SECRET_ACCESS_KEY: "$AWS_SECRET_ACCESS_KEY"
      AWS_REGION: "us-east-1"
      SQS_QUEUE_URL: "$SQS_QUEUE_URL"
      BACALHAU_PORT_http: "9090"
    networks:
      - bacalhau-network
    ports:
      - "9090:9090"

  sqs-puller:
    build: ../../../utility_containers/event-puller
    environment:
      <<: *common-env-variables
      AWS_ACCESS_KEY_ID: "$AWS_ACCESS_KEY_ID"
      AWS_SECRET_ACCESS_KEY: "$AWS_SECRET_ACCESS_KEY"
      AWS_REGION: "us-east-1"
      SQS_QUEUE_URL: "$SQS_QUEUE_URL"
      ENV_FILE: /app/.env
    volumes:
      - ./.env:/app/.env
    networks:
      - bacalhau-network
    ports:
      - "8080:8080"

  client:
    image: ghcr.io/bacalhau-project/bacalhau:latest
    entrypoint: /bin/sh
    stdin_open: true
    tty: true
    stop_signal: SIGTERM
    stop_grace_period: 3s
    environment:
      <<: *common-env-variables
      BACALHAU_API_HOST: orchestrator
    depends_on:
      - orchestrator
    networks:
      - bacalhau-network

networks:
  bacalhau-network: