#!/usr/bin/env bash
# Domain Names
DOMAIN="pintura.cloud"
DOMAIN_PYTHON_SAFE="pintura-cloud"
USER="pintura-cloud"

#Tensorflow Variables
TF_VAR_access_key=AKIAUEMPQRJEXAMPLE
TF_VAR_secret_key=0HoAEsSqTX7MwLUIL523CcBrQqSCUIEXAMPLE

# SSH Key Path (use absolute path)
SSH_KEY_PATH="/home/$USER/.ssh/id_rsa"

# Choose a green region please :)
TF_VAR_region=ca-central-1 
TF_VAR_availability_zone=ca-central-1a

# Tag for searching in AWS
TF_VAR_app_tag='stablediffusiongallery'

# Image size - t2.micro/small should be fine
TF_VAR_instance_type=t2.large

# Must be available in your region
TF_VAR_instance_ami=ami-0a7154091c5c6623e       

# SSH Key  (will be overwritten by SSH_KEY_PATH)
TF_VAR_public_key_path=${SSH_KEY_PATH}

# Only tested with one instance
TF_VAR_instance_count=1                         

# Directory names and locations
# -----------------------------
# Example Gunicorn directory. Should be root read/writeable only.
GUNICORNDIR="/gunicorn"

# Name of your python virtual environment
PYENVNAME="pyenv"

# Example app directory. Should be root read/writeable only.
APPDIR="/var/www/${DOMAIN_PYTHON_SAFE}"

# Download images section
# -----------------------
# Number of jobs to list for each query
NUM_OF_JOBS_TO_LIST=100

# Directory to store images 
IMAGE_DOWNLOAD_DIR="/var/www/${DOMAIN_PYTHON_SAFE}/images"

# Number of seconds between queries to Bacalhau for new images
SECONDS_BETWEEN_DOWNLOAD_QUERIES=60

BACALHAU_IMAGE_DOWNLOADER_PID_FILE="/var/run/bacalhau-downloader.pid"

 # Label to use when querying Bacalhau for images
LABEL="pintura-test"                       

# Create new images section
# -------------------------
# Number of seconds between new image creation requests
SECONDS_BETWEEN_IMAGE_CREATES=60            

# Number of images to create per request
NUMBER_TO_CREATE=5                          
  
# Example static directory. Should be root read/writeable only.
STATICDIR="${APPDIR}/static"                 
BACALHAU_IMAGE_CREATOR_PID_FILE="/var/run/bacalhau-image-creator.pid"

# Key to use when resetting the database - autogenerated each run
SQLITE_KEY=${SQLITE_KEY_GENERATED}             