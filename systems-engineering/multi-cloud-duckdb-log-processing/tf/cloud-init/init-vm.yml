#cloud-config
package_update: true
package_upgrade: true

packages:
  - git
  - docker.io
  - jq
  - python3
  - python3-pip
  - python3-venv
  - curl

# Create user first
users:
  - name: ubuntu
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    groups: [docker, sudo]
    lock_passwd: true

runcmd:
  # Create directories and set permissions
  - echo "Creating directories..."
  - mkdir -p /etc/bacalhau
  - mkdir -p /usr/local/bin
  - mkdir -p /etc/systemd/system
  - mkdir -p /var/log/logs_to_process
  - mkdir -p ${ logs_dir }

  - id ubuntu || echo "Ubuntu user not found"
  - chown -R ubuntu:ubuntu /etc/bacalhau || echo "Failed to set ownership on /etc/bacalhau"
  - chmod -R 755 /etc/bacalhau || echo "Failed to set permissions on /etc/bacalhau"

  # Write files manually since write_files module is failing
  - echo "Writing configuration files..."
  - echo "${orchestrator_config}" | base64 -d > /etc/bacalhau/config.yaml
  - chown root:root /etc/bacalhau/config.yaml
  - chmod 0644 /etc/bacalhau/config.yaml

  - echo "${bacalhau_service}" | base64 -d > /etc/systemd/system/bacalhau.service
  - chown root:root /etc/systemd/system/bacalhau.service
  - chmod 0644 /etc/systemd/system/bacalhau.service

  - echo "${start_bacalhau}" | base64 -d > /usr/local/bin/start_bacalhau.sh
  - chown root:root /usr/local/bin/start_bacalhau.sh
  - chmod 0755 /usr/local/bin/start_bacalhau.sh

  - echo "${ipfs_service}" | base64 -d > /etc/systemd/system/ipfs.service
  - chown root:root /etc/systemd/system/ipfs.service
  - chmod 0644 /etc/systemd/system/ipfs.service

  - echo "${log_generator_py}" | base64 -d > /usr/local/bin/log_generator.py
  - chown root:root /usr/local/bin/log_generator.py
  - chmod 0755 /usr/local/bin/log_generator.py

  # Set up environment info
  - |
    cat > /etc/bacalhau-node-info << EOF
    export REGION=${region}
    export ZONE=${zone}
    export APP_NAME=${app_name}
    EOF
  - chmod 0444 /etc/bacalhau-node-info

  # Verify file creation and permissions
  - echo "Verifying file creation..."
  - ls -la /etc/systemd/system/bacalhau.service || echo "Failed to verify bacalhau.service"
  - ls -la /usr/local/bin/start_bacalhau.sh || echo "Failed to verify start_bacalhau.sh"
  - ls -la /etc/systemd/system/ipfs.service || echo "Failed to verify ipfs.service"
  - ls -la /usr/local/bin/log_generator.py || echo "Failed to verify log_generator.py"

  # Install IPFS
  - echo "Installing IPFS..."
  - wget https://dist.ipfs.io/go-ipfs/v0.9.1/go-ipfs_v0.9.1_linux-amd64.tar.gz || echo "Failed to download IPFS"
  - tar xvf go-ipfs_v0.9.1_linux-amd64.tar.gz || echo "Failed to extract IPFS"
  - sudo bash go-ipfs/install.sh || echo "Failed to install IPFS"
  - sudo IPFS_PATH=/data/ipfs ipfs init || echo "Failed to initialize IPFS"

  # Start Docker service
  - echo "Starting Docker service..."
  - systemctl start docker || echo "Failed to start Docker"
  - systemctl enable docker || echo "Failed to enable Docker"
  - systemctl status docker || echo "Docker status check failed"

  # Install Bacalhau
  - echo "Installing Bacalhau..."
  - curl -sL https://get.bacalhau.org/install.sh | bash -s -- -v pre-release -d /usr/local/bin || echo "Failed to install Bacalhau"
  - chmod +x /usr/local/bin/bacalhau || echo "Failed to make Bacalhau executable"
  - bacalhau version || echo "Failed to get Bacalhau version"

  # Set up Python environment
  - echo "Setting up Python environment..."
  - python3 -m venv /usr/local/bacalhau-env || echo "Failed to create Python virtual environment"
  - /usr/local/bacalhau-env/bin/pip3 install faker || echo "Failed to install Python dependencies"

  # Configure system settings
  - echo "Configuring system settings..."
  - sudo sysctl -w net.core.rmem_max=2500000 || echo "Failed to set rmem_max"

  # Start services
  - echo "Starting services..."
  - systemctl daemon-reload
  - systemctl enable ipfs || echo "Failed to enable IPFS service"
  - systemctl start ipfs || echo "Failed to start IPFS service"
  - systemctl enable bacalhau.service || echo "Failed to enable Bacalhau service"
  - systemctl start bacalhau.service || echo "Failed to start Bacalhau service"
  - systemctl status bacalhau.service || echo "Failed to get Bacalhau service status"

  # Set up log rotation
  - echo "Setting up log rotation..."
  - |
    cat > /etc/logrotate.d/${app_name} << EOF
    ${logs_dir}/*.log {
        hourly
        missingok
        rotate 24
        compress
        delaycompress
        olddir /var/log/logs_to_process
    }
    EOF
  - chmod 0444 /etc/logrotate.d/${app_name}

  # Add SSH key
  - echo "Adding SSH key..."
  - echo "${ssh_key}" >> /home/ubuntu/.ssh/authorized_keys || echo "Failed to add SSH key"
