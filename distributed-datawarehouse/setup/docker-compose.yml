name: bacalhau-multi-region

x-common-env-variables: &common-env-variables
  MINIO_ROOT_USER: "minioadmin"
  MINIO_ROOT_PASSWORD: "minioadminpass"
  AWS_ACCESS_KEY_ID: "minioadmin"
  AWS_SECRET_ACCESS_KEY: "minioadminpass"
  BACALHAU_UPDATECONFIG_INTERVAL: "0"
  BACALHAU_DISABLEANALYTICS: true
  DOCKER_HOST: unix:///var/run/docker.sock

services:
  orchestrator:
    image: ghcr.io/bacalhau-project/bacalhau:latest
    hostname: orchestrator
    command: serve -c /etc/bacalhau/config.yaml --name orchestrator
    environment: *common-env-variables
    ports:
      - "8438:8438"
      - "1234:1234"
      - "4222:4222"
    networks:
      - bacalhau-network
    volumes:
      - orchestrator_data:/root/.bacalhau
      - ./config/orchestrator.yaml:/etc/bacalhau/config.yaml
    healthcheck:
      test: ["CMD", "bacalhau", "agent", "alive"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  compute-us-1:
    image: ghcr.io/bacalhau-project/bacalhau:latest
    hostname: compute-us-1
    command: serve -c /etc/bacalhau/config.yaml
    environment:
      <<: *common-env-variables
    depends_on:
      orchestrator:
        condition: service_healthy
      minio-us:
        condition: service_started
    privileged: true
    networks:
      - bacalhau-network
      - us-region
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/compute-us.yaml:/etc/bacalhau/config.yaml

  compute-us-2:
    extends: compute-us-1
    hostname: compute-us-2

  compute-us-3:
    extends: compute-us-1
    hostname: compute-us-3

  minio-us:
    image: quay.io/minio/minio
    command: server /data --console-address ":9001"
    environment: *common-env-variables
    volumes:
      - minio-us-data:/data
    networks:
      us-region:
        aliases:
          - minio

  compute-eu-1:
    image: ghcr.io/bacalhau-project/bacalhau:latest
    hostname: compute-eu-1
    command: serve -c /etc/bacalhau/config.yaml
    environment:
      <<: *common-env-variables
    depends_on:
      orchestrator:
        condition: service_healthy
      minio-eu:
        condition: service_started
    privileged: true
    networks:
      - bacalhau-network
      - eu-region
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/compute-eu.yaml:/etc/bacalhau/config.yaml

  compute-eu-2:
    extends: compute-eu-1
    hostname: compute-eu-2

  compute-eu-3:
    extends: compute-eu-1
    hostname: compute-eu-3

  minio-eu:
    image: quay.io/minio/minio
    command: server /data --console-address ":9001"
    environment: *common-env-variables
    volumes:
      - minio-eu-data:/data
    networks:
      eu-region:
        aliases:
          - minio

  client:
    image: ghcr.io/bacalhau-project/bacalhau:latest
    entrypoint: /bin/bash
    stdin_open: true
    tty: true
    stop_signal: SIGTERM
    stop_grace_period: 3s
    environment:
      <<: *common-env-variables
      BACALHAU_API_HOST: orchestrator
    depends_on:
      - orchestrator
    networks:
      - bacalhau-network

  minio-global:
    image: quay.io/minio/minio
    command: server /data --console-address ":9001"
    environment: *common-env-variables
    volumes:
      - minio-global-data:/data
    networks:
      - bacalhau-network

networks:
  bacalhau-network:
    driver: bridge
  us-region:
  eu-region:

volumes:
  orchestrator_data:
  minio-us-data:
  minio-eu-data:
  minio-global-data:
