input {
  file {
    path => "${LOG_PATH:/app/logs/application.log}"
    start_position => "end"
    sincedb_path => "${CHECKPOINT_PATH:/tmp/checkpoint.pos}"
    codec => json
    tags => ["raw_log"]
  }
}

filter {
  #
  # 1) Convert the time_local field to @timestamp
  #
  date {
    match => [ "time_local", "ISO8601" ]
    target => "@timestamp"
  }

  #
  # 2) Clone the event so one copy goes to S3 and the other goes to OpenSearch
  #
  clone {
    clones => [ "_aggregated_stats" ]
  }

  #
  # 3) For the OpenSearch copy only, add a few extra fields like useragent
  #
  if "_aggregated_stats" in [tags] {
    # For clarity, remove the old raw_log tag from this clone
    mutate {
      remove_tag => ["raw_log"]
    }

    # Parse user-agent string, storing results in [user_agent]
    useragent {
      source => "http_user_agent"
      target => "user_agent"
    }

    geoip {
      source => "remote_addr"
      target => "geoip"
      fields => ["location", "country_code2", "city_name"]
    }

    # Normalize request paths to enhance aggregation
    ruby {
      path => "/logstash/filters/01-normalize_request.rb"
    }

    # Aggregate the data
    ruby {
      path => "/logstash/filters/02-aggregate.rb"
      script_params => { "duration" => "${AGGREGATE_DURATION:30}" }
    }

    # Sort the aggregated data and only keep the top 10 of each attribute
    ruby {
      path => "/logstash/filters/03-sort_and_output.rb"
      script_params => { 
        "min_count" => 3
        "limit" => 10 
      }
    }

    # Add the hour of the day to the event which is useful for visualizations
    ruby {
      code => "
        event.set('[hour_of_day]', Time.at(event.get('@timestamp').to_i).hour)
      "
    }
  }
}

output {
  if "raw_log" in [tags] {
    s3 {
      access_key_id => "minioadmin"
      secret_access_key => "minioadmin"
      bucket => "${S3_BUCKET}"
      endpoint => "${S3_ENDPOINT}"
      prefix => "%{+YYYY-MM-dd-HH}"
      region => "${AWS_REGION}"
      additional_settings => {
        force_path_style => true
        follow_redirects => false
      }
      validate_credentials_on_root_bucket => false
      time_file => "${S3_TIME_FILE:60}"
      rotation_strategy => "time"
      encoding => "gzip"
      codec => line {
        format => "%{message}"
      }
    }
  }

  if "_aggregated_stats" in [tags] {
    opensearch {
      hosts => ["${OPENSEARCH_ENDPOINT}"]
      index => "aggregated-stats-%{+YYYY.MM.dd}"
    }
  }

  if "_aggregated_geoip" in [tags] {
    opensearch {
      hosts => ["${OPENSEARCH_ENDPOINT}"]
      index => "aggregated-geoip-%{+YYYY.MM.dd}"
      template => "/logstash/templates/geoip.json"
      template_name => "aggregated-geoip"
      template_overwrite => true
    }
  }
}